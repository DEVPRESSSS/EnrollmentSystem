// <auto-generated />
using System;
using EnrollmentSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnrollmentSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250505142120_SeededApplicationTbl")]
    partial class SeededApplicationTbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnrollmentSystem.Models.Applicant", b =>
                {
                    b.Property<string>("ApplicantID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantID");

                    b.ToTable("Applicants");

                    b.HasData(
                        new
                        {
                            ApplicantID = "Applicant01",
                            Address = "Malabon City",
                            ApplicationStatus = "Pending",
                            DateOfBirth = new DateTime(2000, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "montemorjeraldd@gmail.com",
                            FirstName = "Jerald",
                            LastName = "Montemor",
                            MiddleName = "Rabino",
                            PhoneNumber = "09488749263"
                        },
                        new
                        {
                            ApplicantID = "Applicant02",
                            Address = "Quezon City",
                            ApplicationStatus = "Approved",
                            DateOfBirth = new DateTime(2000, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anna.lopez@example.com",
                            FirstName = "Anna",
                            LastName = "Lopez",
                            MiddleName = "Marie",
                            PhoneNumber = "09488749263"
                        },
                        new
                        {
                            ApplicantID = "Applicant03",
                            Address = "Caloocan City",
                            ApplicationStatus = "Pending",
                            DateOfBirth = new DateTime(1999, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mark.cruz@example.com",
                            FirstName = "Mark",
                            LastName = "Cruz",
                            MiddleName = "Anthony",
                            PhoneNumber = "09488749263"
                        },
                        new
                        {
                            ApplicantID = "Applicant04",
                            Address = "Makati City",
                            ApplicationStatus = "Rejected",
                            DateOfBirth = new DateTime(2001, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophia.delrosario@example.com",
                            FirstName = "Sophia",
                            LastName = "Del Rosario",
                            MiddleName = "Grace",
                            PhoneNumber = "09488749263"
                        },
                        new
                        {
                            ApplicantID = "Applicant05",
                            Address = "Pasig City",
                            ApplicationStatus = "Pending",
                            DateOfBirth = new DateTime(1998, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.santos@example.com",
                            FirstName = "John",
                            LastName = "Santos",
                            MiddleName = "Paul",
                            PhoneNumber = "09488749263"
                        });
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Department", b =>
                {
                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = "DEPARMENT001",
                            CourseCode = "TEST",
                            DepartmentName = "College of Technology"
                        },
                        new
                        {
                            DepartmentID = "DEPARMENT002",
                            CourseCode = "TEST",
                            DepartmentName = "College of Engineering"
                        });
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Document", b =>
                {
                    b.Property<string>("DocumentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicantID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentID");

                    b.HasIndex("ApplicantID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.ProgramEnrollment", b =>
                {
                    b.Property<string>("ProgramEnrollmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicantID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramEnrollmentID");

                    b.HasIndex("ApplicantID");

                    b.HasIndex("ProgramID");

                    b.ToTable("ProgramEnrollment");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Programs", b =>
                {
                    b.Property<string>("ProgramID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("CurrentEnrollment")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailableForEnrollment")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Document", b =>
                {
                    b.HasOne("EnrollmentSystem.Models.Applicant", "Applicants")
                        .WithMany("Documents")
                        .HasForeignKey("ApplicantID");

                    b.Navigation("Applicants");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.ProgramEnrollment", b =>
                {
                    b.HasOne("EnrollmentSystem.Models.Applicant", "Applicant")
                        .WithMany("Enrollments")
                        .HasForeignKey("ApplicantID");

                    b.HasOne("EnrollmentSystem.Models.Programs", "Program")
                        .WithMany("Enrollments")
                        .HasForeignKey("ProgramID");

                    b.Navigation("Applicant");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Programs", b =>
                {
                    b.HasOne("EnrollmentSystem.Models.Department", "Department")
                        .WithMany("Programs")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Applicant", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Department", b =>
                {
                    b.Navigation("Programs");
                });

            modelBuilder.Entity("EnrollmentSystem.Models.Programs", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
